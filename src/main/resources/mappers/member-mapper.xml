<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="memberMapper">
<resultMap type="MemberDto" id="memberResult">
	<id column="USER_NO" property="userNo"/>
	<result column="USER_NAME" property="userName"/>
	<result column="USER_ID" property="userId"/>
	<result column="USER_PWD" property="userPwd"/>
	<result column="PHONE" property="phone"/>
	<result column="POST_CODE" property="postCode"/>
	<result column="ADDRESS" property="address"/>
	<result column="DETAIL_ADDRESS" property="detailAddress"/>
	<result column="TOTAL_ADDRESS" property="totalAddress"/>
	<result column="BANK_ACCOUNT" property="bankAccount"/>
	<result column="BANK" property="bank"/>
	<result column="EMAIL" property="email"/>
	<result column="ENROLL_DATE" property="enrollDate"/>
	<result column="PROFILE_URL" property="profileURL"/>
	<result column="COUNT_FAIL" property="countFail"/>
	<result column="VACATION_COUNT" property="vacationCount"/>
	<result column="AUTH_LEVEL" property="authLevel"/>
	<result column="SALARY" property="salary"/>
	<result column="TEAM_CODE" property="teamCode"/>
	<result column="POSITION_CODE" property="positionCode"/>
	<result column="POSITION" property="position"/>
	<result column="TEAM" property="team"/>
	<result column="CLOCK_IN" property="clockIn"/>
	<result column="CLOCK_OUT" property="clockOut"/>
	<result column="SERVICE_DATE" property="serviceDate"/>
	<result column="GIVEN_DATE" property="vaGivenDate"/>
	<result column="YEAR_LABOR" property="vaYearLabor"/>
	<result column="USING_DTAE" property="vaUsingDate"/>
</resultMap>

  <!--  회원 로그인  -->
  <select id="memberLogin" resultMap="memberResult">
  	select
  		user_no, user_name, user_id, user_pwd, team_code, POSITION_CODE, profile_url, GIVEN_DATE , YEAR_LABOR
  	from
  		member
  	where
  		user_id = #{ userId }
  	and
  		status = 'Y'
  </select>
  
  <!-- 회원 정보 조회 -->
	<select id="selectMember" resultMap="memberResult"> 
	select USER_NO 
	    , USER_NAME
	    , USER_ID
	    , USER_PWD
	    , PHONE
	    , POST_CODE
	    , ADDRESS
	    , DETAIL_ADDRESS
	    , TOTAL_ADDRESS
	    , BANK_ACCOUNT
	    , BANK
	    , EMAIL
	    , PROFILE_URL
	    , COUNT_FAIL
	    , VACATION_COUNT
	    , AUTH_LEVEL
	    , SALARY
	    , (SELECT CODE_NAME FROM TB_GROUP WHERE GROUP_CODE = 'TEAM01' AND CODE = M.TEAM_CODE) AS TEAM
	    , (SELECT CODE_NAME FROM TB_GROUP WHERE GROUP_CODE = 'POSI01' AND CODE = M.POSITION_CODE) AS POSITION
	    , NVL((SELECT TO_CHAR(CLOCK_IN, 'HH24:MI:SS') FROM ATTENDANCE WHERE USER_NO = M.USER_NO AND TO_CHAR(CLOCK_IN, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')), '00:00:00') AS CLOCK_IN
	    , NVL((SELECT TO_CHAR(CLOCK_OUT, 'HH24:MI:SS') FROM ATTENDANCE WHERE USER_NO = M.USER_NO AND TO_CHAR(CLOCK_OUT, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')), '00:00:00') AS CLOCK_OUT
	    , TRUNC((SYSDATE - ENROLL_DATE) + 1) AS SERVICE_DATE
	from member M
	where 
	user_id = #{userId}
	and status = 'Y'
	</select>
	
	<!-- 회원 이름 찾기 -->
	<select id="selectUserName" resultType="String">
		select user_name
		from member
		where
			user_no = #{ userNo }
		and status = 'Y'
	</select>
	
	<!-- 자신을 제외한 팀원 조회 -->
	<select id="selectTeamMember" resultType="String">
		select user_no
		from member
		where
			team_code = #{ teamCode }
		and
			user_no != #{ sendUserNo }
		and
			status = 'Y'
	</select>
 
	<!-- 회원 아이디 찾기 -->
	<select id="selectUserId" resultType="String">
		select user_id
		from member
		where
			user_no = #{ userNo }
		and status = 'Y'
	</select>
	
	<!-- 회원 랜덤 비밀번호로 수정 -->
	<select id="updateUserPwd">
		update
			member
		set
			user_pwd = #{userPwd}
			, modify_date = sysdate
		where
			user_id = #{userId}
		and
			status = 'Y'
	</select>

	<!-- 회원 프로필 이미지 변경 -->
	<update id="updateProfile">
		update
			member
		set
			profile_url = #{ profileURL }
			, modify_date = sysdate
		where
			user_no = #{ userNo }
	</update>
	
	<!-- 회원 정보수정 -->
	<update id="updateMember">
		update
			member
		set
			user_name = #{ userName }
			, phone = #{ phone }
			, post_code = #{ postNumber }
			, address = #{ address }
			, detail_address = #{ detailAddress }
			, total_address = #{ totalAddress }
			, email = #{ email }
			, bank = #{ bank }
			, bank_account = #{ bankAccount }
			, modify_date = sysdate
			, modify_user_no = #{ userNo }
		where
			user_no = #{ userNo }
	</update>
	<!-- 전체 회원 조회 -->
	<select id="selectAllMember" resultMap="memberResult">
		select
		    USER_NO , USER_NAME , PROFILE_URL , TEAM_CODE , POSITION_CODE
		    , (
		        select code_name
		        from tb_group
		        where group_code = 'POSI01'
		        and position_code = code
		    ) as "position"
		from
		    member
		where
		    status = 'Y'
		order by
    		position_code desc
	</select>
	
	<!-- 채팅방 참여인원 조회 -->
	<select id="selectParticipants" resultMap="memberResult">
	  select
        user_no, user_name, profile_url
        , (select code_name from tb_group g where g.group_code = 'POSI01' and g.code = position_code) as position
    from
        chatting_participation cp, member
    where
        chat_user_no = user_no
    and
        cr_no = #{ roomNo }
    and
    		chat_user_no != #{ userNo }
	</select>
	
	<!-- 이름으로 사원 검색 -->
	<select id="searchMember" resultMap="memberResult">
	select
	    user_no, user_name
	    , (select code_name from tb_group g where group_code = 'POSI01' and g.code = position_code) as position
	    , (select code_name from tb_group g where group_code = 'TEAM01' and g.code = team_code) as team
	from 
	    member
	where
	    user_name like '%${ keyword }%'
	and
	    user_no != #{ userNo }
	</select>
	
 <!-- ================== 이예찬 ========================== -->
 <!-- 이예찬 : Member 캘린더 위의 동료 선택 창에 필요한 데이터 조회 쿼리 -->
	<select id="selectTeamPeer"
	resultMap="memberResult">
		select 
     USER_NO
     , USER_NAME
     , PROFILE_URL
     , (select code_name from tb_group where group_code = 'POSI01' and code = member.position_code) position
		from Member
		join tb_group on (code = team_code)
		where Member.status = 'Y'
		and team_code = #{teamCode}
		and group_code = 'DEPT01'
	</select>
	
	<select id="selectAnuual" 
	resultMap="memberResult">
		select 
			VACATION_COUNT ,USING_DTAE
		from 
			Member
		where 
			user_NO = #{userNo}
	</select>
	
 <!-- ================== 이예찬 ========================== -->
 
 <!-- ======================================= "가림" 구역 ======================================= -->
 <!-- -->  
 <select id="selectMemberForMainPage" parameterType="MemberDto" resultType="map">
 	select 
 		   user_no "userNo"
 		  ,user_name "userName"
 		  ,user_id "userId"
 		  ,user_pwd "userPwd"
 		  ,profile_url "profileURL"
 		  ,vacation_count "vacationCount"
 		  ,position_code "positionCode"
 		  ,team_code "teamCode"
 		  ,(
 		  	 select upper_code
 		  	   from tb_group
 		  	  where group_code like 'TEAM%'
 		  	    and code = member.team_code
 		  	) "deptCode"
 		  ,(
 		  	select code_name
 		  	  from tb_group
 		  	 where group_code like 'TEAM%'
 		  	   and code = member.team_code
 		   ) "teamName"
 		  ,(
 		  	 select code_name
 		  	   from tb_group
 		  	  where group_code like 'POSI%'
 		  	    and code = member.position_code
 		    ) "positionName"
 	   from member
 	  where user_no = #{userNo}
 </select>
 
 <!-- ======================================= "가림" 구역 ======================================= -->
 
	 <!-- ◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆ 호관 start ◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆-->
	 <!-- 사이드바(구성원 관리) 관리자만 표시 하기 -->
	<select id="selectAuthLevel" parameterType="MemberDto" resultType="map">
		select auth_level AS "authLevel"
		  from member
		 where user_no = #{ userNo }
	</select>
	
	<!-- 회원 정보 전체 조회  -->
	<select id="selectMemberAll" resultMap="memberResult">
	SELECT USER_NO , USER_NAME , USER_ID , USER_PWD , PHONE , POST_CODE, ADDRESS, DETAIL_ADDRESS, TOTAL_ADDRESS , BANK_ACCOUNT , BANK , EMAIL , PROFILE_URL , COUNT_FAIL , VACATION_COUNT , AUTH_LEVEL , SALARY , TEAM_CODE , POSITION_CODE 
     ,(SELECT CODE_NAME 
         FROM TB_GROUP 
         WHERE GROUP_CODE LIKE 'DEPT%' 
         AND CODE = (SELECT UPPER_CODE 
                 FROM TB_GROUP 
                 WHERE GROUP_CODE LIKE 'TEAM%' 
                 AND CODE = MEMBER.TEAM_CODE)) AS DEPARTMENT
     , (SELECT CODE_NAME 
        FROM TB_GROUP
        WHERE GROUP_CODE LIKE 'TEAM%' AND CODE = TEAM_CODE) AS TEAM
     , (SELECT CODE_NAME 
          FROM TB_GROUP
          WHERE GROUP_CODE LIKE 'POSI%' AND CODE = POSITION_CODE) AS POSITION
		FROM MEMBER 
        WHERE STATUS = 'Y'
        ORDER BY USER_NO ASC
	</select>
	
	<!-- 회원 정보 전체 검색 조회 -->
	<select id="selectMemberListSearch" resultMap="memberResult">
	SELECT USER_NO, USER_NAME
          , USER_ID, PHONE, POST_CODE, ADDRESS, DETAIL_ADDRESS, TOTAL_ADDRESS 
       	  , BANK_ACCOUNT, BANK, EMAIL
          , PROFILE_URL
          , COUNT_FAIL, VACATION_COUNT,  AUTH_LEVEL, SALARY, TEAM_CODE, POSITION_CODE
          , (SELECT CODE_NAME 
             FROM TB_GROUP 
             WHERE GROUP_CODE LIKE 'DEPT%' 
             AND CODE = (SELECT UPPER_CODE 
                         FROM TB_GROUP 
                         WHERE GROUP_CODE LIKE 'TEAM%' 
                         AND CODE = MEMBER.TEAM_CODE)) AS DEPARTMENT
          , (SELECT CODE_NAME 
             FROM TB_GROUP
             WHERE GROUP_CODE LIKE 'TEAM%' 
             AND CODE = TEAM_CODE) AS TEAM 
          , (SELECT CODE_NAME 
             FROM TB_GROUP
             WHERE GROUP_CODE LIKE 'POSI%' 
             AND CODE = POSITION_CODE) AS POSITION
	 	FROM MEMBER 
       WHERE STATUS = 'Y'
   		 AND USER_NAME LIKE '%' || #{ name } || '%'
   		 AND (SELECT CODE_NAME 
             FROM TB_GROUP 
             WHERE GROUP_CODE LIKE 'DEPT%' 
             AND CODE = (SELECT UPPER_CODE 
                         FROM TB_GROUP 
                         WHERE GROUP_CODE LIKE 'TEAM%' 
                         AND CODE = MEMBER.TEAM_CODE)) LIKE '%' || #{ department } || '%'
   		 AND (SELECT CODE_NAME 
          	 FROM TB_GROUP
          	 WHERE GROUP_CODE LIKE 'TEAM%' 
           	 AND CODE = MEMBER.TEAM_CODE) LIKE '%' || #{ team } || '%'
         AND (SELECT CODE_NAME
          	 FROM TB_GROUP
          	 WHERE GROUP_CODE LIKE 'POSI%' 
           	 AND CODE = MEMBER.POSITION_CODE) LIKE '%' || #{ position } || '%'
	   ORDER BY USER_NO ASC
	</select>
	
	<!-- userNo값으로 회원 정보 조회  -->
	<select id="selectMemberInfo" resultMap="memberResult">
	SELECT USER_NO , USER_NAME , USER_ID , USER_PWD , PHONE , POST_CODE, ADDRESS, DETAIL_ADDRESS, TOTAL_ADDRESS , BANK_ACCOUNT , BANK , EMAIL , PROFILE_URL , COUNT_FAIL , VACATION_COUNT , AUTH_LEVEL , SALARY , TEAM_CODE , POSITION_CODE 
     ,(SELECT CODE_NAME 
         FROM TB_GROUP 
         WHERE GROUP_CODE LIKE 'DEPT%' 
         AND CODE = (SELECT UPPER_CODE 
                 FROM TB_GROUP 
                 WHERE GROUP_CODE LIKE 'TEAM%' 
                 AND CODE = MEMBER.TEAM_CODE)) AS DEPARTMENT
     , (SELECT CODE_NAME 
        FROM TB_GROUP
        WHERE GROUP_CODE LIKE 'TEAM%' AND CODE = TEAM_CODE) AS TEAM
     , (SELECT CODE_NAME 
          FROM TB_GROUP
          WHERE GROUP_CODE LIKE 'POSI%' AND CODE = POSITION_CODE) AS POSITION
		FROM MEMBER
		WHERE 
		USER_NO = #{ userNo }
		AND STATUS = 'Y' 
	</select>

	<!-- 사용자 급여정보 수정하기 -->
	<update id="updateSalary">
		UPDATE MEMBER
		   SET SALARY = #{ salary }
		     , BANK = #{ bank }
		     , BANK_ACCOUNT = #{ bankAccount }
		 WHERE USER_NO = #{ userNo }
	</update>
	
	<!-- 사용자 탈퇴 -->
	<update id="deleteMemberAttendance" parameterType="map">
		UPDATE MEMBER
		   SET STATUS = 'N',
			   MODIFY_DATE = SYSDATE,
			   MODIFY_USER_NO = #{modifyUserNo}
		 WHERE USER_NO = #{userNo}
	</update>
	
	<!-- 사용자 정보 수정하기 -->
	<update id="updateMemberAttendance" parameterType="map">
		UPDATE MEMBER
			SET USER_NAME = #{userName},
			    POST_CODE = #{postCode},
			    ADDRESS = #{address},
			    DETAIL_ADDRESS = #{detailAddress},
			    TOTAL_ADDRESS = #{totalAddress},
			    EMAIL = #{email},
			    PHONE = #{phone},
			    TEAM_CODE = (SELECT CODE
			                 FROM TB_GROUP
			                 WHERE CODE_NAME = #{team}
			                   AND GROUP_CODE LIKE 'TEAM%'),
			    POSITION_CODE = (SELECT CODE
			                     FROM TB_GROUP
			                     WHERE CODE_NAME = #{position}
			                       AND GROUP_CODE LIKE 'POSI%'),
			    MODIFY_DATE = SYSDATE,
			    MODIFY_USER_NO = #{modifyUserNo}
			WHERE USER_NO = #{userNo}
	</update>
	
 	<!-- ◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆ 호관 end ◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆◆-->
 
 
</mapper>
